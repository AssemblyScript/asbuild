"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeFiles = exports.InitCmd = exports.initCmdBuilder = void 0;
var files_1 = require("./files");
var utils_1 = require("../../utils");
var interfaces_1 = require("./interfaces");
var path = __importStar(require("path"));
var chalk_1 = __importDefault(require("chalk"));
var packageJson_1 = require("./files/packageJson");
var doneMsg = chalk_1.default(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\nDon't forget to install dependencies before you start:\n\n  ", "\n\nTo edit the entry file, open {cyan 'assembly/index.ts'} in your editor of choice.\nCreate as many additional files as necessary and use them as imports.\n\nTo build the entry file to WebAssembly when you are ready, run:\n\n  ", " build\n\nRunning the command above creates the following binaries incl. their respective\ntext format representations and source maps:\n\n  {cyan ./build/untouched.wasm}\n  {cyan ./build/untouched.wasm.map}\n  {cyan ./build/untouched.wat}\n\n  ^ The untouched WebAssembly module as generated by the compiler.\n    This one matches your sources exactly, without any optimizations.\n\n  {cyan ./build/optimized.wasm}\n  {cyan ./build/optimized.wasm.map}\n  {cyan ./build/optimized.wat}\n\n  ^ The optimized WebAssembly module using default optimization settings.\n    You can change the optimization settings in {cyan 'package.json'}.\n\nTo run the tests, do:\n\n  ", "\n\nThe AssemblyScript documentation covers all the details:\n\n  https://docs.assemblyscript.org\n\nHave a nice day!\n"], ["\nDon't forget to install dependencies before you start:\n\n  ", "\n\nTo edit the entry file, open {cyan 'assembly/index.ts'} in your editor of choice.\nCreate as many additional files as necessary and use them as imports.\n\nTo build the entry file to WebAssembly when you are ready, run:\n\n  ", " build\n\nRunning the command above creates the following binaries incl. their respective\ntext format representations and source maps:\n\n  {cyan ./build/untouched.wasm}\n  {cyan ./build/untouched.wasm.map}\n  {cyan ./build/untouched.wat}\n\n  ^ The untouched WebAssembly module as generated by the compiler.\n    This one matches your sources exactly, without any optimizations.\n\n  {cyan ./build/optimized.wasm}\n  {cyan ./build/optimized.wasm.map}\n  {cyan ./build/optimized.wat}\n\n  ^ The optimized WebAssembly module using default optimization settings.\n    You can change the optimization settings in {cyan 'package.json'}.\n\nTo run the tests, do:\n\n  ", "\n\nThe AssemblyScript documentation covers all the details:\n\n  https://docs.assemblyscript.org\n\nHave a nice day!\n"])), packageJson_1.getPmCommands().install, packageJson_1.getPmCommands().run, packageJson_1.getPmCommands().test);
function initMsg(baseDir) {
    var msg = [
        chalk_1.default(templateObject_2 || (templateObject_2 = __makeTemplateObject(["This command will make sure that the following files exist in the project"], ["This command will make sure that the following files exist in the project"]))),
        chalk_1.default(templateObject_3 || (templateObject_3 = __makeTemplateObject(["directory {bold \"", "\":}"], ["directory {bold \"", "\":}"])), baseDir),
        "",
    ];
    for (var _i = 0, initFiles_1 = files_1.initFiles; _i < initFiles_1.length; _i++) {
        var file = initFiles_1[_i];
        msg.push(chalk_1.default(templateObject_4 || (templateObject_4 = __makeTemplateObject(["  {cyan ./", "}"], ["  {cyan ./", "}"])), file.path));
        msg.push(chalk_1.default(templateObject_5 || (templateObject_5 = __makeTemplateObject(["  ", ""], ["  ", ""])), file.description));
        msg.push("");
    }
    msg.push("The command will try to update existing files to match the correct settings");
    msg.push("");
    return msg.join("\n");
}
exports.initCmdBuilder = function (y) {
    return y
        .positional("baseDir", {
        type: "string",
        default: ".",
        description: "Create a sample AS project in this directory",
    })
        .option("yes", {
        boolean: true,
        default: false,
        description: "Skip the interactive prompt",
    });
};
exports.InitCmd = {
    command: "init [baseDir]",
    describe: "Create a new AS package in an given directory",
    builder: function (y) {
        return exports.initCmdBuilder(y).onFinishCommand(function (code) { return process.exit(code); });
    },
    handler: function (args) { return __awaiter(void 0, void 0, void 0, function () {
        var retCode, baseDir, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    retCode = 0;
                    baseDir = path.resolve(args.baseDir);
                    // print initMsg
                    utils_1.log(initMsg(baseDir));
                    _a = !args.yes;
                    if (!_a) return [3 /*break*/, 2];
                    return [4 /*yield*/, utils_1.askYesNo(chalk_1.default(templateObject_6 || (templateObject_6 = __makeTemplateObject(["{bold Do you to continue?}"], ["{bold Do you to continue?}"]))))];
                case 1:
                    _a = !(_b.sent());
                    _b.label = 2;
                case 2:
                    // ask confirmation, return if 'No'
                    if (_a)
                        return [2 /*return*/, 2];
                    try {
                        writeFiles(baseDir);
                        utils_1.log(doneMsg);
                    }
                    catch (err) {
                        // https://github.com/yargs/yargs/issues/1069#issuecomment-468451450
                        // If error is thrown in async handler, parser is run twice which
                        // cause the help commands to print along with error stack
                        // So to prevent that we catch the error and simply print it.
                        utils_1.log(chalk_1.default(templateObject_7 || (templateObject_7 = __makeTemplateObject(["{bold.bgRedBright ERROR:} Unexpected Error while trying to write init files."], ["{bold.bgRedBright ERROR:} Unexpected Error while trying to write init files."]))), true);
                        utils_1.log(err, true);
                        retCode = 1;
                    }
                    return [2 /*return*/, retCode];
            }
        });
    }); },
};
function writeFiles(baseDir) {
    utils_1.log("");
    for (var _i = 0, initFiles_2 = files_1.initFiles; _i < initFiles_2.length; _i++) {
        var file = initFiles_2[_i];
        utils_1.log(chalk_1.default(templateObject_8 || (templateObject_8 = __makeTemplateObject(["- Making sure that '", "' is set up..."], ["- Making sure that '", "' is set up..."])), file.path));
        var relativePath = file.getRelativePath(baseDir);
        switch (file.write(baseDir)) {
            case interfaces_1.InitResult.CREATED:
                utils_1.log(chalk_1.default(templateObject_9 || (templateObject_9 = __makeTemplateObject(["  {green Created:} ", "\n"], ["  {green Created:} ", "\\n"])), relativePath));
                break;
            case interfaces_1.InitResult.EXISTS:
                utils_1.log(chalk_1.default(templateObject_10 || (templateObject_10 = __makeTemplateObject(["  {yellow Exists:} ", "\n"], ["  {yellow Exists:} ", "\\n"])), relativePath));
                break;
            case interfaces_1.InitResult.UPDATED:
                utils_1.log(chalk_1.default(templateObject_11 || (templateObject_11 = __makeTemplateObject(["  {greenBright Updated:} ", "\n"], ["  {greenBright Updated:} ", "\\n"])), relativePath));
                break;
            default:
                break;
        }
    }
    utils_1.log(chalk_1.default(templateObject_12 || (templateObject_12 = __makeTemplateObject(["{bold.green Done!}"], ["{bold.green Done!}"]))));
}
exports.writeFiles = writeFiles;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10, templateObject_11, templateObject_12;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY21kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1hbmRzL2luaXQvY21kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsaUNBQW9DO0FBQ3BDLHFDQUE0QztBQUM1QywyQ0FBMEM7QUFDMUMseUNBQTZCO0FBQzdCLGdEQUEwQjtBQUMxQixtREFBb0Q7QUFFcEQsSUFBTSxPQUFPLEdBQUcsZUFBSyxtb0NBQUEsZ0VBR2pCLEVBQXVCLHVPQU92QixFQUFtQiwwcEJBcUJuQixFQUFvQix5SEFPdkIsS0FuQ0csMkJBQWEsRUFBRSxDQUFDLE9BQU8sRUFPdkIsMkJBQWEsRUFBRSxDQUFDLEdBQUcsRUFxQm5CLDJCQUFhLEVBQUUsQ0FBQyxJQUFJLENBT3ZCLENBQUM7QUFFRixTQUFTLE9BQU8sQ0FBQyxPQUFlO0lBQzlCLElBQUksR0FBRyxHQUFHO1FBQ1IsZUFBSyw4SUFBQSwyRUFBMkU7UUFDaEYsZUFBSywrRkFBQSxvQkFBb0IsRUFBTyxNQUFLLEtBQVosT0FBTztRQUNoQyxFQUFFO0tBQ0gsQ0FBQztJQUNGLEtBQWlCLFVBQVMsRUFBVCxjQUFBLGlCQUFTLEVBQVQsdUJBQVMsRUFBVCxJQUFTLEVBQUU7UUFBdkIsSUFBSSxJQUFJLGtCQUFBO1FBQ1gsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFLLG9GQUFBLFlBQWEsRUFBUyxHQUFHLEtBQVosSUFBSSxDQUFDLElBQUksRUFBSSxDQUFDO1FBQ3pDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBSywyRUFBQSxJQUFLLEVBQWdCLEVBQUUsS0FBbEIsSUFBSSxDQUFDLFdBQVcsRUFBRyxDQUFDO1FBQ3ZDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDZDtJQUNELEdBQUcsQ0FBQyxJQUFJLENBQ04sNkVBQTZFLENBQzlFLENBQUM7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LENBQUMsT0FBTztnQkFDckIsV0FBRyxDQUFDLGVBQUssc0dBQUEsMkJBQTRCLEVBQVksS0FBSSxLQUFoQixZQUFZLEVBQUssQ0FBQztnQkFDdkQsTUFBTTtZQUNSO2dCQUNFLE1BQU07U0FDVDtLQUNGO0lBQ0QsV0FBRyxDQUFDLGVBQUsseUZBQUEsb0JBQW9CLEtBQUMsQ0FBQztBQUNqQyxDQUFDO0FBcEJELGdDQW9CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHlhcmdzIGZyb20gXCJ5YXJnc1wiO1xuaW1wb3J0IHsgaW5pdEZpbGVzIH0gZnJvbSBcIi4vZmlsZXNcIjtcbmltcG9ydCB7IGFza1llc05vLCBsb2cgfSBmcm9tIFwiLi4vLi4vdXRpbHNcIjtcbmltcG9ydCB7IEluaXRSZXN1bHQgfSBmcm9tIFwiLi9pbnRlcmZhY2VzXCI7XG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgY2hhbGsgZnJvbSBcImNoYWxrXCI7XG5pbXBvcnQgeyBnZXRQbUNvbW1hbmRzIH0gZnJvbSBcIi4vZmlsZXMvcGFja2FnZUpzb25cIjtcblxuY29uc3QgZG9uZU1zZyA9IGNoYWxrYFxuRG9uJ3QgZm9yZ2V0IHRvIGluc3RhbGwgZGVwZW5kZW5jaWVzIGJlZm9yZSB5b3Ugc3RhcnQ6XG5cbiAgJHtnZXRQbUNvbW1hbmRzKCkuaW5zdGFsbH1cblxuVG8gZWRpdCB0aGUgZW50cnkgZmlsZSwgb3BlbiB7Y3lhbiAnYXNzZW1ibHkvaW5kZXgudHMnfSBpbiB5b3VyIGVkaXRvciBvZiBjaG9pY2UuXG5DcmVhdGUgYXMgbWFueSBhZGRpdGlvbmFsIGZpbGVzIGFzIG5lY2Vzc2FyeSBhbmQgdXNlIHRoZW0gYXMgaW1wb3J0cy5cblxuVG8gYnVpbGQgdGhlIGVudHJ5IGZpbGUgdG8gV2ViQXNzZW1ibHkgd2hlbiB5b3UgYXJlIHJlYWR5LCBydW46XG5cbiAgJHtnZXRQbUNvbW1hbmRzKCkucnVufSBidWlsZFxuXG5SdW5uaW5nIHRoZSBjb21tYW5kIGFib3ZlIGNyZWF0ZXMgdGhlIGZvbGxvd2luZyBiaW5hcmllcyBpbmNsLiB0aGVpciByZXNwZWN0aXZlXG50ZXh0IGZvcm1hdCByZXByZXNlbnRhdGlvbnMgYW5kIHNvdXJjZSBtYXBzOlxuXG4gIHtjeWFuIC4vYnVpbGQvdW50b3VjaGVkLndhc219XG4gIHtjeWFuIC4vYnVpbGQvdW50b3VjaGVkLndhc20ubWFwfVxuICB7Y3lhbiAuL2J1aWxkL3VudG91Y2hlZC53YXR9XG5cbiAgXiBUaGUgdW50b3VjaGVkIFdlYkFzc2VtYmx5IG1vZHVsZSBhcyBnZW5lcmF0ZWQgYnkgdGhlIGNvbXBpbGVyLlxuICAgIFRoaXMgb25lIG1hdGNoZXMgeW91ciBzb3VyY2VzIGV4YWN0bHksIHdpdGhvdXQgYW55IG9wdGltaXphdGlvbnMuXG5cbiAge2N5YW4gLi9idWlsZC9vcHRpbWl6ZWQud2FzbX1cbiAge2N5YW4gLi9idWlsZC9vcHRpbWl6ZWQud2FzbS5tYXB9XG4gIHtjeWFuIC4vYnVpbGQvb3B0aW1pemVkLndhdH1cblxuICBeIFRoZSBvcHRpbWl6ZWQgV2ViQXNzZW1ibHkgbW9kdWxlIHVzaW5nIGRlZmF1bHQgb3B0aW1pemF0aW9uIHNldHRpbmdzLlxuICAgIFlvdSBjYW4gY2hhbmdlIHRoZSBvcHRpbWl6YXRpb24gc2V0dGluZ3MgaW4ge2N5YW4gJ3BhY2thZ2UuanNvbid9LlxuXG5UbyBydW4gdGhlIHRlc3RzLCBkbzpcblxuICAke2dldFBtQ29tbWFuZHMoKS50ZXN0fVxuXG5UaGUgQXNzZW1ibHlTY3JpcHQgZG9jdW1lbnRhdGlvbiBjb3ZlcnMgYWxsIHRoZSBkZXRhaWxzOlxuXG4gIGh0dHBzOi8vZG9jcy5hc3NlbWJseXNjcmlwdC5vcmdcblxuSGF2ZSBhIG5pY2UgZGF5IVxuYDtcblxuZnVuY3Rpb24gaW5pdE1zZyhiYXNlRGlyOiBzdHJpbmcpOiBzdHJpbmcge1xuICBsZXQgbXNnID0gW1xuICAgIGNoYWxrYFRoaXMgY29tbWFuZCB3aWxsIG1ha2Ugc3VyZSB0aGF0IHRoZSBmb2xsb3dpbmcgZmlsZXMgZXhpc3QgaW4gdGhlIHByb2plY3RgLFxuICAgIGNoYWxrYGRpcmVjdG9yeSB7Ym9sZCBcIiR7YmFzZURpcn1cIjp9YCxcbiAgICBgYCxcbiAgXTtcbiAgZm9yIChsZXQgZmlsZSBvZiBpbml0RmlsZXMpIHtcbiAgICBtc2cucHVzaChjaGFsa2AgIHtjeWFuIC4vJHtmaWxlLnBhdGh9fWApO1xuICAgIG1zZy5wdXNoKGNoYWxrYCAgJHtmaWxlLmRlc2NyaXB0aW9ufWApO1xuICAgIG1zZy5wdXNoKGBgKTtcbiAgfVxuICBtc2cucHVzaChcbiAgICBgVGhlIGNvbW1hbmQgd2lsbCB0cnkgdG8gdXBkYXRlIGV4aXN0aW5nIGZpbGVzIHRvIG1hdGNoIHRoZSBjb3JyZWN0IHNldHRpbmdzYFxuICApO1xuICBtc2cucHVzaChgYCk7XG4gIHJldHVybiBtc2cuam9pbihcIlxcblwiKTtcbn1cblxuZXhwb3J0IGNvbnN0IGluaXRDbWRCdWlsZGVyID0gKHk6IHlhcmdzLkFyZ3YpID0+XG4gIHlcbiAgICAucG9zaXRpb25hbChcImJhc2VEaXJcIiwge1xuICAgICAgdHlwZTogXCJzdHJpbmdcIixcbiAgICAgIGRlZmF1bHQ6IFwiLlwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQ3JlYXRlIGEgc2FtcGxlIEFTIHByb2plY3QgaW4gdGhpcyBkaXJlY3RvcnlcIixcbiAgICB9KVxuICAgIC5vcHRpb24oXCJ5ZXNcIiwge1xuICAgICAgYm9vbGVhbjogdHJ1ZSxcbiAgICAgIGRlZmF1bHQ6IGZhbHNlLFxuICAgICAgZGVzY3JpcHRpb246IFwiU2tpcCB0aGUgaW50ZXJhY3RpdmUgcHJvbXB0XCIsXG4gICAgfSk7XG5cbmV4cG9ydCBjb25zdCBJbml0Q21kOiB5YXJncy5Db21tYW5kTW9kdWxlID0ge1xuICBjb21tYW5kOiBcImluaXQgW2Jhc2VEaXJdXCIsXG4gIGRlc2NyaWJlOiBcIkNyZWF0ZSBhIG5ldyBBUyBwYWNrYWdlIGluIGFuIGdpdmVuIGRpcmVjdG9yeVwiLFxuICBidWlsZGVyOiAoeSkgPT5cbiAgICBpbml0Q21kQnVpbGRlcih5KS5vbkZpbmlzaENvbW1hbmQoKGNvZGU6IG51bWJlcikgPT4gcHJvY2Vzcy5leGl0KGNvZGUpKSxcbiAgaGFuZGxlcjogYXN5bmMgKGFyZ3MpOiBQcm9taXNlPG51bWJlcj4gPT4ge1xuICAgIGxldCByZXRDb2RlID0gMDtcbiAgICBjb25zdCBiYXNlRGlyOiBzdHJpbmcgPSBwYXRoLnJlc29sdmUoYXJncy5iYXNlRGlyIGFzIHN0cmluZyk7XG4gICAgLy8gcHJpbnQgaW5pdE1zZ1xuICAgIGxvZyhpbml0TXNnKGJhc2VEaXIpKTtcbiAgICAvLyBhc2sgY29uZmlybWF0aW9uLCByZXR1cm4gaWYgJ05vJ1xuICAgIGlmICghYXJncy55ZXMgJiYgIShhd2FpdCBhc2tZZXNObyhjaGFsa2B7Ym9sZCBEbyB5b3UgdG8gY29udGludWU/fWApKSlcbiAgICAgIHJldHVybiAyO1xuXG4gICAgdHJ5IHtcbiAgICAgIHdyaXRlRmlsZXMoYmFzZURpcik7XG4gICAgICBsb2coZG9uZU1zZyk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20veWFyZ3MveWFyZ3MvaXNzdWVzLzEwNjkjaXNzdWVjb21tZW50LTQ2ODQ1MTQ1MFxuICAgICAgLy8gSWYgZXJyb3IgaXMgdGhyb3duIGluIGFzeW5jIGhhbmRsZXIsIHBhcnNlciBpcyBydW4gdHdpY2Ugd2hpY2hcbiAgICAgIC8vIGNhdXNlIHRoZSBoZWxwIGNvbW1hbmRzIHRvIHByaW50IGFsb25nIHdpdGggZXJyb3Igc3RhY2tcbiAgICAgIC8vIFNvIHRvIHByZXZlbnQgdGhhdCB3ZSBjYXRjaCB0aGUgZXJyb3IgYW5kIHNpbXBseSBwcmludCBpdC5cbiAgICAgIGxvZyhcbiAgICAgICAgY2hhbGtge2JvbGQuYmdSZWRCcmlnaHQgRVJST1I6fSBVbmV4cGVjdGVkIEVycm9yIHdoaWxlIHRyeWluZyB0byB3cml0ZSBpbml0IGZpbGVzLmAsXG4gICAgICAgIHRydWVcbiAgICAgICk7XG4gICAgICBsb2coZXJyLCB0cnVlKTtcbiAgICAgIHJldENvZGUgPSAxO1xuICAgIH1cbiAgICByZXR1cm4gcmV0Q29kZTtcbiAgfSxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUZpbGVzKGJhc2VEaXI6IHN0cmluZykge1xuICBsb2coYGApO1xuICBmb3IgKGxldCBmaWxlIG9mIGluaXRGaWxlcykge1xuICAgIGxvZyhjaGFsa2AtIE1ha2luZyBzdXJlIHRoYXQgJyR7ZmlsZS5wYXRofScgaXMgc2V0IHVwLi4uYCk7XG4gICAgY29uc3QgcmVsYXRpdmVQYXRoID0gZmlsZS5nZXRSZWxhdGl2ZVBhdGgoYmFzZURpcik7XG4gICAgc3dpdGNoIChmaWxlLndyaXRlKGJhc2VEaXIpKSB7XG4gICAgICBjYXNlIEluaXRSZXN1bHQuQ1JFQVRFRDpcbiAgICAgICAgbG9nKGNoYWxrYCAge2dyZWVuIENyZWF0ZWQ6fSAke3JlbGF0aXZlUGF0aH1cXG5gKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIEluaXRSZXN1bHQuRVhJU1RTOlxuICAgICAgICBsb2coY2hhbGtgICB7eWVsbG93IEV4aXN0czp9ICR7cmVsYXRpdmVQYXRofVxcbmApO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgSW5pdFJlc3VsdC5VUERBVEVEOlxuICAgICAgICBsb2coY2hhbGtgICB7Z3JlZW5CcmlnaHQgVXBkYXRlZDp9ICR7cmVsYXRpdmVQYXRofVxcbmApO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICBsb2coY2hhbGtge2JvbGQuZ3JlZW4gRG9uZSF9YCk7XG59XG4iXX0=